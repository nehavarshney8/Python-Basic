class Solution(object):
      
    
    def Palindrome(self,s):
        l = len(s)
        flag_even=[]
       
        if l==1 and s!="" and s!=" ":
#             print("This is a single character i.e cannot be palindrome")
            return 0
        
        elif " " in s or s=="":
#             print("Empty String")
            return 0
        
        else:

            max_index= l-1
#             if s[0]==s[max_index] and s[1] == s[l-2]:
#                 print("palindrome")
            for i in range(0,l//2):
                if s[i] == s[max_index - i]:
                    flag=1
                    flag_even.append(flag)
                else:
#                     print("not a palindrome")
                    flag=0
                    flag_even.append(flag)
                    break
            for j in flag_even:
                if j==0:
#                     print("not a palindrome")
                    return
#             print("palindrome")
            return 1
            


# This FUNCTION is to return the FIRST ENCOUNTERED PALINDROME in the string
    def implement(self,s):
        
        for i in range(0,len(s)-1):
            
            s1=s[i]
            for j in range(i+1,len(s)):
                s1=s1+s[j]
#                 print(s1)
                if self.Palindrome(s1)==1:
                    print(s1)
                    return True
                else:
                    continue

# This FUNCTION is to return the LONGEST PALINDROME in the string
    
    def max_length_palindrome(self,s):
        
        palindrome=[]
        length=[]
        
        for i in range(0,len(s)-1):
            s1=s[i]
            for j in range(i+1,len(s)):
                s1=s1+s[j]
                
                if self.Palindrome(s1)==1:
                    palindrome.append(s1)
                    length.append(len(s1))
                else:
                    continue
        
        print(palindrome)
        print(length)
        
        max1=length[0]
        index=0
        for k in range(0,len(length)-1):
#             max1=length[k]
#             index=k
            
            if max1 < length[k+1]:
                max1=length[k+1]
                index=k+1
            
#             for l in range(k+1,len(length)):
                
#                 if max1 < length[l]:
#                     max1=length[l]
#                     index=l
#                     continue
                    
        print(max1)
        print(index)
        print("The maximum length palindrome is %s with length of %d" % (palindrome[index],max1))
    
    
    
        
        
        
s= Solution()
# s.Palindrome("aaaabaaaa")
# s.implement("aba")
s.max_length_palindrome("aaaabaaaa")